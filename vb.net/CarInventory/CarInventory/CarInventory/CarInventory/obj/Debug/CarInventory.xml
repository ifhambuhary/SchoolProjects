<?xml version="1.0"?>
<doc>
<assembly>
<name>
CarInventory
</name>
</assembly>
<members>
<member name="T:CarInventory.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:CarInventory.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:CarInventory.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:CarInventory.classVehicle.#ctor">
 <summary>
 Constructor - Default - creates a new vehicle object
 </summary>
</member>
<member name="M:CarInventory.classVehicle.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 Constuctor - Parameterized - creates a new vehicle object
 </summary>
 <param name="make"></param>
 <param name="model"></param>
 <param name="year"></param>
 <param name="price"></param>
 <param name="newStatus"></param>
</member>
<member name="P:CarInventory.classVehicle.Count">
 <summary>
 Count ReadOnly Property - Gets the number of vehicles that have been instantiated/created
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:CarInventory.classVehicle.IdentificationNumber">
 <summary>
 IdentificationNumber ReadOnly Property - Gets a specific vehicle identification number
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:CarInventory.classVehicle.newStatus">
 <summary>
 NewStatus Property - >Gets and Sets the New status of a Vehicle
 </summary>
 <returns>Boolean</returns>
</member>
<member name="P:CarInventory.classVehicle.Make">
 <summary>
 Make property - Gets and Sets the Make of a Vehicle
 </summary>
 <returns>String</returns>
</member>
<member name="P:CarInventory.classVehicle.Model">
 <summary>
 Model property - Gets and Sets the Model of a Vehicle
 </summary>
 <returns>String</returns>
</member>
<member name="P:CarInventory.classVehicle.Year">
 <summary>
 Year property - Gets and Sets the Year of a Vehicle
 </summary>
 <returns>String</returns>
</member>
<member name="P:CarInventory.classVehicle.Price">
 <summary>
 Price property - Gets and Sets the Price of a Vehicle
 </summary>
 <returns>String</returns>
</member>
<member name="M:CarInventory.classVehicle.GetSalutation">
 <summary>
 GetSalutation is a function that a salutation based on the private properties within the class scope
 </summary>
 <returns>String</returns>
</member>
<member name="T:CarInventory.frmCarInventory">
 <summary>
 Author Name:    Ifham Buhary
 Project Name:   Car Invetory
 Date:           11-July-2019
 Description     Application to keep a track of Car Inventory
 </summary>
</member>
<member name="M:CarInventory.frmCarInventory.btnEnter_Click(System.Object,System.EventArgs)">
 <summary>
 btnEnter_Click - Will validate that the data entered into the controls is appropriate.
                - Once the data is validated a vehicle object will be create using the  
                - parameterized constructor. It will also insert the new vehicle object
                - into the vehicle List collection. It will also check to see if the data in
                - the controls has been selected from the listview by the user. In that case
                - it will need to update the data in the specific vehicle object and the 
                - listview as well.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:CarInventory.frmCarInventory.Reset">
 <summary>
 Reset - set the controls back to their default state.
 </summary>
</member>
<member name="M:CarInventory.frmCarInventory.btnReset_Click(System.Object,System.EventArgs)">
 <summary>
 The code in the btnReset_Click EventHandler will clear the form and set
 focus back to the input text box. 
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:CarInventory.frmCarInventory.btnExit_Click(System.Object,System.EventArgs)">
 <summary>
 The code in the btnExit_Click EventHandler will close the application
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:CarInventory.frmCarInventory.lvwVehicles_ItemCheck(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
 <summary>
 lvwCustomers_ItemCheck - user to prevent the user from checking the check box in the list view if it is not in edit mode.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:CarInventory.frmCarInventory.lvwVehicles_SelectedIndexChanged(System.Object,System.EventArgs)">
 <summary>
 lvwVehicles_SelectedIndexChange - when the user selected a row in the list it will pipulate the fields of editing
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
</members>
</doc>
